version: "3.8"

services:
  # WebSocket Server (Your Go app)
  websocket_server:
    build:
      context: .  # This assumes the Dockerfile for your Go app is in the root
    container_name: websocket_server
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - rabbitmq
      - mongodb
    environment:
      - RABBITMQ_URL=rabbitmq:5672
      - REDIS_URL=redis:6379
      - MONGO_URL=mongodb://mongodb:27017
    networks:
      - chat_app_network

  # Nginx (reverse proxy for WebSocket)
  nginx:
    build:
      context: ./nginx  # Folder where nginx Dockerfile is located
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - websocket_server
    networks:
      - chat_app_network

  # RabbitMQ
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672" # RabbitMQ Management UI
    networks:
      - chat_app_network

  # Redis
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - chat_app_network

  # MongoDB
  mongodb:
    image: "mongo:latest"
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - chat_app_network

networks:
  chat_app_network:
    driver: bridge
